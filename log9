Invoking optimize.sh.
	Workload: workload_small.tgz
	Output Dir: output
Starting a Gradle Daemon, 14 stopped Daemons could not be reused, use --status for details
Reusing configuration cache.
> Task :processResources NO-SOURCE
> Task :processTestResources NO-SOURCE
> Task :compileJava
> Task :classes
> Task :compileTestJava NO-SOURCE
> Task :testClasses UP-TO-DATE
> Task :test NO-SOURCE
> Task :check UP-TO-DATE
> Task :jar
> Task :assemble
> Task :build

BUILD SUCCESSFUL in 8s
2 actionable tasks: 2 executed
Configuration cache entry reused.
Reusing configuration cache.
> Task :processResources NO-SOURCE
> Task :compileJava UP-TO-DATE
> Task :classes UP-TO-DATE
> Task :shadowJar

BUILD SUCCESSFUL in 51s
2 actionable tasks: 1 executed, 1 up-to-date
Configuration cache entry reused.
Stopping Daemon(s)
1 Daemon stopped
Running the app!
	Arg1: ../input/queries
	Arg2: ../output
Table names: [customer, lineitem, nation, orders, part, partsupp, region, supplier, revenue0r15721]
Loaded 75000 rows from customer
Loaded 2999671 rows from lineitem
Loaded 25 rows from nation
Loaded 750000 rows from orders
Loaded 100000 rows from part
Loaded 400000 rows from partsupp
Loaded 5 rows from region
Loaded 5000 rows from supplier
Loaded 5000 rows from revenue0r15721
Table Names in root: [customer, lineitem, nation, orders, part, partsupp, region, revenue0r15721, supplier]
Optimizing query: capybara3.sql
prepping statement
executing statement
Time taken in calcite: 20794ms
Optimizing query: q4.sql
prepping statement
executing statement
Error executing statement: exception while executing query: Cannot convert 1996-01-02 to int
Optimizing query: capybara1.sql
prepping statement
Error executing statement: Error while preparing plan [EnumerableLimit(fetch=[100])
  EnumerableSort(sort0=[$1], sort1=[$0], dir0=[DESC], dir1=[ASC])
    EnumerableAggregate(group=[{0}], NUMWAIT=[COUNT()])
      EnumerableProject(s_name=[$1])
        EnumerableFilter(condition=[IS NULL($37)])
          EnumerableCorrelate(correlation=[$cor3], joinType=[left], requiredColumns=[{7, 9}])
            EnumerableValues(tuples=[[]])
            EnumerableAggregate(group=[{}], agg#0=[MIN($0)])
              EnumerableProject($f0=[true])
                EnumerableFilter(condition=[AND(=($0, $cor3.l_orderkey), <>($2, $cor3.l_suppkey), >($12, $11))])
                  EnumerableTableScan(table=[[lineitem]])
]
Optimizing query: q2.sql
prepping statement
Error executing statement: Error while preparing plan [EnumerableLimit(fetch=[100])
  EnumerableSort(sort0=[$0], sort1=[$2], sort2=[$1], sort3=[$3], dir0=[DESC], dir1=[ASC], dir2=[ASC], dir3=[ASC])
    EnumerableProject(S_ACCTBAL=[$5], S_NAME=[$1], N_NAME=[$13], P_PARTKEY=[$21], P_MFGR=[$23], S_ADDRESS=[$2], S_PHONE=[$4], S_COMMENT=[$6])
      EnumerableHashJoin(condition=[AND(=($7, $21), =($10, $20))], joinType=[inner])
        EnumerableHashJoin(condition=[AND(=($3, $12), =($0, $8))], joinType=[inner])
          EnumerableTableScan(table=[[supplier]])
          EnumerableProject(ps_partkey=[$7], ps_suppkey=[$8], ps_availqty=[$9], ps_supplycost=[$10], ps_comment=[$11], n_nationkey=[$0], n_name=[$1], n_regionkey=[$2], n_comment=[$3], r_regionkey=[$4], r_name=[$5], r_comment=[$6])
            EnumerableHashJoin(condition=[=($2, $4)], joinType=[inner])
              EnumerableTableScan(table=[[nation]])
              EnumerableNestedLoopJoin(condition=[true], joinType=[inner])
                EnumerableFilter(condition=[=(CAST($1):VARCHAR(6) NOT NULL, 'EUROPE')])
                  EnumerableTableScan(table=[[region]])
                EnumerableTableScan(table=[[partsupp]])
        EnumerableHashJoin(condition=[=($0, $2)], joinType=[inner])
          EnumerableAggregate(group=[{0}], EXPR$0=[MIN($1)])
            EnumerableProject(ps_partkey=[$0], ps_supplycost=[$3])
              EnumerableHashJoin(condition=[=($1, $5)], joinType=[inner])
                EnumerableTableScan(table=[[partsupp]])
                EnumerableProject(s_suppkey=[$7], s_name=[$8], s_address=[$9], s_nationkey=[$10], s_phone=[$11], s_acctbal=[$12], s_comment=[$13], n_nationkey=[$0], n_name=[$1], n_regionkey=[$2], n_comment=[$3], r_regionkey=[$4], r_name=[$5], r_comment=[$6])
                  EnumerableHashJoin(condition=[=($0, $10)], joinType=[inner])
                    EnumerableProject(n_nationkey=[$3], n_name=[$4], n_regionkey=[$5], n_comment=[$6], r_regionkey=[$0], r_name=[$1], r_comment=[$2])
                      EnumerableHashJoin(condition=[=($0, $5)], joinType=[inner])
                        EnumerableFilter(condition=[=(CAST($1):VARCHAR(6) NOT NULL, 'EUROPE')])
                          EnumerableTableScan(table=[[region]])
                        EnumerableTableScan(table=[[nation]])
                    EnumerableTableScan(table=[[supplier]])
          EnumerableFilter(condition=[AND(=($5, 44), LIKE($4, '%TIN'))])
            EnumerableTableScan(table=[[part]])
]
Optimizing query: capybara2.sql
prepping statement
executing statement
Time taken in calcite: 20230ms
Optimizing query: q19.sql
Optimizing query: q14.sql
prepping statement
executing statement
Error executing statement: exception while executing query: Cannot convert 1996-03-13 to int
Optimizing query: q20.sql
prepping statement
executing statement
Error executing statement: exception while executing query: Cannot convert 1996-03-13 to int
Optimizing query: q10.sql
prepping statement
Error executing statement: Error while preparing plan [EnumerableLimit(fetch=[20])
  EnumerableSort(sort0=[$2], dir0=[DESC])
    EnumerableProject(C_CUSTKEY=[$0], C_NAME=[$1], REVENUE=[$7], C_ACCTBAL=[$2], N_NAME=[$4], C_ADDRESS=[$5], C_PHONE=[$3], C_COMMENT=[$6])
      EnumerableAggregate(group=[{0, 1, 2, 3, 4, 5, 6}], REVENUE=[$SUM0($7)])
        EnumerableProject(c_custkey=[$0], c_name=[$1], c_acctbal=[$5], c_phone=[$4], n_name=[$34], c_address=[$2], c_comment=[$7], $f7=[*($22, -(1, $23))])
          EnumerableHashJoin(condition=[AND(=($3, $33), =($8, $17))], joinType=[inner])
            EnumerableHashJoin(condition=[=($0, $9)], joinType=[inner])
              EnumerableTableScan(table=[[customer]])
              EnumerableFilter(condition=[AND(>=($4, 1993-02-01), <($4, +(1993-02-01, 3:INTERVAL MONTH)))])
                EnumerableTableScan(table=[[orders]])
            EnumerableNestedLoopJoin(condition=[true], joinType=[inner])
              EnumerableFilter(condition=[=(CAST($8):VARCHAR(1) NOT NULL, 'R')])
                EnumerableTableScan(table=[[lineitem]])
              EnumerableTableScan(table=[[nation]])
]
Optimizing query: q21.sql
prepping statement
Error executing statement: Error while preparing plan [EnumerableLimit(fetch=[100])
  EnumerableSort(sort0=[$1], sort1=[$0], dir0=[DESC], dir1=[ASC])
    EnumerableAggregate(group=[{0}], NUMWAIT=[COUNT()])
      EnumerableProject(s_name=[$1])
        EnumerableFilter(condition=[IS NULL($39)])
          EnumerableHashJoin(condition=[AND(=($7, $37), =($9, $38))], joinType=[left])
            EnumerableFilter(condition=[AND(=($0, $9), =($23, $7), =(CAST($25):VARCHAR(1) NOT NULL, 'F'), >($19, $18), =($3, $32), =(CAST($33):VARCHAR(5) NOT NULL, 'CHINA'), IS NOT NULL($36))])
              EnumerableProject(s_suppkey=[$0], s_name=[$1], s_address=[$2], s_nationkey=[$3], s_phone=[$4], s_acctbal=[$5], s_comment=[$6], l_orderkey=[$7], l_partkey=[$8], l_suppkey=[$9], l_linenumber=[$10], l_quantity=[$11], l_extendedprice=[$12], l_discount=[$13], l_tax=[$14], l_returnflag=[$15], l_linestatus=[$16], l_shipdate=[$17], l_commitdate=[$18], l_receiptdate=[$19], l_shipinstruct=[$20], l_shipmode=[$21], l_comment=[$22], o_orderkey=[$23], o_custkey=[$24], o_orderstatus=[$25], o_totalprice=[$26], o_orderdate=[$27], o_orderpriority=[$28], o_clerk=[$29], o_shippriority=[$30], o_comment=[$31], n_nationkey=[$32], n_name=[$33], n_regionkey=[$34], n_comment=[$35], $f0=[$38])
                EnumerableHashJoin(condition=[AND(=($7, $36), =($9, $37))], joinType=[left])
                  EnumerableNestedLoopJoin(condition=[true], joinType=[inner])
                    EnumerableNestedLoopJoin(condition=[true], joinType=[inner])
                      EnumerableTableScan(table=[[supplier]])
                      EnumerableTableScan(table=[[lineitem]])
                    EnumerableNestedLoopJoin(condition=[true], joinType=[inner])
                      EnumerableTableScan(table=[[orders]])
                      EnumerableTableScan(table=[[nation]])
                  EnumerableAggregate(group=[{0, 1}], agg#0=[MIN($2)])
                    EnumerableProject(l_orderkey0=[$16], l_suppkey0=[$17], $f0=[true])
                      EnumerableHashJoin(condition=[AND(=($0, $16), <>($2, $17))], joinType=[inner])
                        EnumerableTableScan(table=[[lineitem]])
                        EnumerableAggregate(group=[{0, 1}])
                          EnumerableProject(l_orderkey=[$7], l_suppkey=[$9])
                            EnumerableNestedLoopJoin(condition=[true], joinType=[inner])
                              EnumerableNestedLoopJoin(condition=[true], joinType=[inner])
                                EnumerableTableScan(table=[[supplier]])
                                EnumerableTableScan(table=[[lineitem]])
                              EnumerableNestedLoopJoin(condition=[true], joinType=[inner])
                                EnumerableTableScan(table=[[orders]])
                                EnumerableTableScan(table=[[nation]])
            EnumerableAggregate(group=[{0, 1}], agg#0=[MIN($2)])
              EnumerableProject(l_orderkey0=[$2], l_suppkey0=[$3], $f0=[true])
                EnumerableHashJoin(condition=[AND(=($0, $2), <>($1, $3))], joinType=[inner])
                  EnumerableProject(l_orderkey=[$0], l_suppkey=[$2])
                    EnumerableFilter(condition=[>($12, $11)])
                      EnumerableTableScan(table=[[lineitem]])
                  EnumerableAggregate(group=[{0, 1}])
                    EnumerableProject(l_orderkey=[$2], l_suppkey=[$3])
                      EnumerableFilter(condition=[AND(=($0, $3), =($6, $2), =(CAST($7):VARCHAR(1) NOT NULL, 'F'), >($5, $4), =($1, $8), =(CAST($9):VARCHAR(5) NOT NULL, 'CHINA'), IS NOT NULL($10))])
                        EnumerableProject(s_suppkey=[$0], s_nationkey=[$1], l_orderkey=[$2], l_suppkey=[$3], l_commitdate=[$4], l_receiptdate=[$5], o_orderkey=[$6], o_orderstatus=[$7], n_nationkey=[$8], n_name=[$9], $f0=[$12])
                          EnumerableHashJoin(condition=[AND(=($2, $10), =($3, $11))], joinType=[left])
                            EnumerableNestedLoopJoin(condition=[true], joinType=[inner])
                              EnumerableNestedLoopJoin(condition=[true], joinType=[inner])
                                EnumerableProject(s_suppkey=[$0], s_nationkey=[$3])
                                  EnumerableTableScan(table=[[supplier]])
                                EnumerableProject(l_orderkey=[$0], l_suppkey=[$2], l_commitdate=[$11], l_receiptdate=[$12])
                                  EnumerableTableScan(table=[[lineitem]])
                              EnumerableNestedLoopJoin(condition=[true], joinType=[inner])
                                EnumerableProject(o_orderkey=[$0], o_orderstatus=[$2])
                                  EnumerableTableScan(table=[[orders]])
                                EnumerableProject(n_nationkey=[$0], n_name=[$1])
                                  EnumerableTableScan(table=[[nation]])
                            EnumerableAggregate(group=[{0, 1}], agg#0=[MIN($2)])
                              EnumerableProject(l_orderkey0=[$16], l_suppkey0=[$17], $f0=[true])
                                EnumerableHashJoin(condition=[AND(=($0, $16), <>($2, $17))], joinType=[inner])
                                  EnumerableTableScan(table=[[lineitem]])
                                  EnumerableAggregate(group=[{0, 1}])
                                    EnumerableProject(l_orderkey=[$7], l_suppkey=[$9])
                                      EnumerableNestedLoopJoin(condition=[true], joinType=[inner])
                                        EnumerableNestedLoopJoin(condition=[true], joinType=[inner])
                                          EnumerableTableScan(table=[[supplier]])
                                          EnumerableTableScan(table=[[lineitem]])
                                        EnumerableNestedLoopJoin(condition=[true], joinType=[inner])
                                          EnumerableTableScan(table=[[orders]])
                                          EnumerableTableScan(table=[[nation]])
]
Optimizing query: q6.sql
prepping statement
executing statement
Error executing statement: exception while executing query: Cannot convert 1996-03-13 to int
Optimizing query: q13.sql
prepping statement
executing statement
Time taken in calcite: 4788ms
Optimizing query: q9.sql
Optimizing query: q5.sql
prepping statement
executing statement
Error executing statement: exception while executing query: Cannot convert 1996-01-02 to int
Optimizing query: q15.sql
prepping statement
executing statement
Time taken in calcite: 164ms
Optimizing query: q3.sql
prepping statement
Error executing statement: Error while preparing plan [EnumerableLimit(fetch=[10])
  EnumerableSort(sort0=[$1], sort1=[$2], dir0=[DESC], dir1=[ASC])
    EnumerableProject(L_ORDERKEY=[$0], REVENUE=[$3], O_ORDERDATE=[$1], O_SHIPPRIORITY=[$2])
      EnumerableAggregate(group=[{0, 1, 2}], REVENUE=[$SUM0($3)])
        EnumerableProject(l_orderkey=[$0], o_orderdate=[$3], o_shippriority=[$4], $f3=[$1])
          EnumerableHashJoin(condition=[=($0, $2)], joinType=[inner])
            EnumerableProject(l_orderkey=[$0], $f3=[*($1, -(1, $2))])
              EnumerableFilter(condition=[>($3, 1995-03-20)])
                EnumerableProject(l_orderkey=[$0], l_extendedprice=[$5], l_discount=[$6], l_shipdate=[$10])
                  EnumerableTableScan(table=[[lineitem]])
            EnumerableProject(o_orderkey=[$2], o_orderdate=[$4], o_shippriority=[$5])
              EnumerableHashJoin(condition=[=($0, $3)], joinType=[inner])
                EnumerableFilter(condition=[=(CAST($1):VARCHAR(9) NOT NULL, 'FURNITURE')])
                  EnumerableProject(c_custkey=[$0], c_mktsegment=[$6])
                    EnumerableTableScan(table=[[customer]])
                EnumerableFilter(condition=[<($2, 1995-03-20)])
                  EnumerableProject(o_orderkey=[$0], o_custkey=[$1], o_orderdate=[$4], o_shippriority=[$7])
                    EnumerableTableScan(table=[[orders]])
]
Optimizing query: q22.sql
prepping statement
executing statement
Time taken in calcite: 1202ms
Optimizing query: q1.sql
prepping statement
executing statement
Error executing statement: exception while executing query: Cannot convert 1996-03-13 to int
Optimizing query: q11.sql
prepping statement
executing statement
Time taken in calcite: 1124ms
Optimizing query: q8.sql
prepping statement
executing statement
Error executing statement: exception while executing query: Cannot convert 1996-01-02 to int
Optimizing query: q12.sql
prepping statement
executing statement
Error executing statement: exception while executing query: Cannot convert 1996-02-12 to int
Optimizing query: q16.sql
Optimizing query: q7.sql
prepping statement
executing statement
Error executing statement: exception while executing query: Cannot convert 1996-03-13 to int
Optimizing query: q17.sql
prepping statement
executing statement
Time taken in calcite: 8437ms
Optimizing query: q18.sql
prepping statement
Error executing statement: Error while preparing plan [EnumerableLimit(fetch=[100])
  EnumerableSort(sort0=[$4], sort1=[$3], dir0=[DESC], dir1=[ASC])
    EnumerableAggregate(group=[{0, 1, 2, 3, 4}], EXPR$5=[$SUM0($5)])
      EnumerableProject(c_name=[$1], c_custkey=[$0], o_orderkey=[$8], o_orderdate=[$12], o_totalprice=[$11], l_quantity=[$21])
        EnumerableHashJoin(condition=[=($8, $17)], joinType=[inner])
          EnumerableHashJoin(condition=[=($0, $9)], joinType=[inner])
            EnumerableTableScan(table=[[customer]])
            EnumerableTableScan(table=[[orders]])
          EnumerableHashJoin(condition=[=($0, $16)], joinType=[inner])
            EnumerableTableScan(table=[[lineitem]])
            EnumerableProject(L_ORDERKEY=[$0])
              EnumerableFilter(condition=[>($1, 314.00)])
                EnumerableAggregate(group=[{0}], agg#0=[$SUM0($1)])
                  EnumerableProject(l_orderkey=[$0], l_quantity=[$4])
                    EnumerableTableScan(table=[[lineitem]])
]
Optimizing query: capybara4.sql
prepping statement
executing statement
Time taken in calcite: 3578ms
/home/ubuntu/15799-s25-project1
